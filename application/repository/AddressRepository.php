<?php
namespace app\repository;

use app\repository\Repository;

class AddressRepository extends Repository
{
    public function model() {
        return 'app\models\Address';
    }

    public function inserField(){
        return $this->model->insert;
    }

    /**
     * 数据分页
     *
     * @param  string $search    搜索关键词
     * @param  int    $start
     * @param  int    $length
     *
     * @return array
     */
    public function listForPage($uid, int $start, int $length)
    {
        return $this->model->where(
            function ($query) use ($uid) {
                $query->where(function ($query) use ($uid) {
                    if (!empty($uid)) {
                        $query->where('uid',$uid);
                    }
                });
            }
        )->order('is_default', 'Desc')->order('id', 'desc')->limit($start, $length)->select();
    }

    public function getFind($field,$value, $columns = ['*'])
    {
       return  $this->model->field($columns)->where($field,$value)->order('id','DESC')->find();
    }

    public function getOne($columns = ['*'])
    {
       return $this->model->field($columns)->order('id','DESC')->find();
    }

    /**
     * 数据分页总数
     *
     * @param  string $search    搜索关键词
     * @param  int    $status    状态
     * @param  int    $tag       标识
     *
     * @return number
     */
    public function listForTotal($uid)
    {
        return $this->model->where(
            function ($query) use ($uid) {
                $query->where(function ($query) use ($uid) {
                    if (!empty($uid)) {
                        $query->where('uid',$uid);
                    }
                });
            }
        )->count();
    }

    /**
     * 保存一条数据
     *
     * @param array $attributes
     *
     * @return mixed
     */
    public function create(array $attributes) {
        $attributes['created_at'] = time();
        $attributes['updated_at'] = time();
        return $this->model->create($attributes);
    }

    /**
     * 按ID更新数据
     *
     * @param array $attributes
     * @param       $id
     * @param       $field
     *
     * @return mixed
     */
    public function update(array $attributes, $id, $field = 'id') {
        $attributes['updated_at'] = time();
        return $this->model->where($field, $id)->update($attributes);
    }

    /**
     * 删除数据
     * @param array $where 删除条件
     * @return mixed
     */
    public function del(array $where)
    {
        return $this->model->deleteWhere($where); // TODO: Change the autogenerated stub
    }
}